; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 357
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 63
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;----------------------
;
; SERIAL2MIDI v0.0.1
;
; by Fabrizio Radica
; Amiblitz 3.9.9 - 2023
;
;______________________

WBStartup
#MIDI=0

CloseSerial #MIDI
NEWTYPE .MIDIDATA
   command.s
   note.w
End NEWTYPE
DEFTYPE .MIDIDATA _mididata



MIDI$="serial.device"
#MBUFFER=64
serial=OpenSerial(MIDI$,#MIDI,31250,16)

SetSerialBuffer #MIDI,MBUFFER
;------------------------------------

Function readMidiData{}


        While Joyb(0)=0


          mdata.w=ReadSerial(#MIDI)


          If mdata<>-1
            Select Hex$(mdata)
             Case "00000090"
                 NPrint "NOTE ON: ",Hex$(mdata)
             Case "00000080"
                 NPrint "NOTE OFF: ",Hex$(mdata)
             Case "000000FA"
                 NPrint "START: ",Hex$(mdata)
             Case "000000FC"
                 NPrint "STOP: ",Hex$(mdata)
             Case "000000FB"
                 NPrint "CONTINUE: ",Hex$(mdata)
            End Select

            NPrint "MSG: ",Asc(ReadSerialString(#MIDI))

          EndIf

          VWait 1
        Wend
End Function


;------------------------------------


If serial=0

        NPrint "Unable to open: "+MIDI$
    Else

        NPrint "Serial Open ",ser

        readMidiData{}
EndIf


CloseSerial #MIDI
NPrint Chr$(10)+"Close Serial port. Bye Bye! "+MIDI$

End




